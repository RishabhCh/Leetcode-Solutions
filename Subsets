class Solution {
public:
    string get_binary(int num)
    {
        string res="";
        while(num!=0)
        {
            if(num%2==0)
            {
                res+='0';
            }
            else
            {
                res+='1';
            }
            num/=2;
        }
        return res;
    }
    vector<vector<int>> subsets(vector<int>& nums) 
    {
        int binary_limit=pow(2,nums.size());
        vector<vector<int>> result;
        string binary_of_number;
        for(int i=0;i<binary_limit;i++)
        {
            binary_of_number = get_binary(i);
            vector<int> subset;
            for(int j=0;j<binary_of_number.length();j++)
            {
                if(binary_of_number[j]=='1')
                {
                    subset.push_back(nums[j]);
                }
            }
            result.push_back(subset);
        }
        return result;
    }
};
