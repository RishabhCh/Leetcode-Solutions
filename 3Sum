class Solution 
{
public:
    vector<vector<int>> threeSum(vector<int>& nums) 
    {
        set<vector<int>> result_set;
        vector<vector<int>> result;
        int n = nums.size(),j,k;
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++)
        {
            j=i+1;
            k=n-1;
            while(j<k)
            {
                if(nums[j]+nums[k]==-nums[i])
                {
                    result_set.insert({nums[i],nums[j],nums[k]});
                    while(j!=n-1 && nums[j]==nums[j+1])
                    {
                        j++;
                    }
                    while(k!=0 && nums[k]==nums[k-1])
                    {
                        k--;
                    }
                    j++;
                }
                else if(nums[j]+nums[k]>-nums[i])
                {
                    while(k!=0 && nums[k]==nums[k-1])
                    {
                        k--;
                    }
                    k--;
                }
                else
                {
                    while(j!=n-1 && nums[j]==nums[j+1])
                    {
                        j++;
                    }
                    j++;
                }
                while(i!=n-1 && nums[i]==nums[i+1])
                {
                    i++;
                }
            }
        }
        for(auto tuple : result_set)
        {
            result.push_back(tuple);
        }
        return result;
    }
};
